heat_template_version: queens

description: >
  Ceph RadosGW service.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  SwiftPassword:
    description: The password for the swift service account
    type: string
    hidden: true
  KeystoneRegion:
    type: string
    default: 'regionOne'
    description: Keystone region for endpoint
  AdminPassword:
    description: The password for the keystone admin account, used for monitoring, querying neutron etc.
    type: string
    hidden: true

resources:
  CephBase:
    type: ./ceph-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Ceph RadosGW service.
    value:
      service_name: ceph_rgw
      upgrade_tasks: []
      puppet_config:
        config_image: ''
        config_volume: ''
        step_config: ''
      docker_config: {}
      workflow_tasks: {get_attr: [CephBase, role_data, workflow_tasks]}
      config_settings:
        map_merge:
        - tripleo.ceph_rgw.firewall_rules:
            '122 ceph rgw':
              dport: {get_param: [EndpointMap, CephRgwInternal, port]}
        - ceph_rgw_ansible_vars:
            map_merge:
            - {get_attr: [CephBase, role_data, config_settings, ceph_common_ansible_vars]}
            - radosgw_keystone: true
              radosgw_keystone_ssl: false
              radosgw_address_block: {get_param: [ServiceData, net_cidr_map, {get_param: [ServiceNetMap, CephRgwNetwork]}]}
              radosgw_civetweb_port: {get_param: [EndpointMap, CephRgwInternal, port]}
      update_tasks: &endpoint_update_tasks
        - name: get bootstrap nodeid
          tags: common
          command: hiera -c /etc/puppet/hiera.yaml bootstrap_nodeid
          register: bootstrap_node
        - name: set is_bootstrap_node fact
          tags: common
          set_fact: is_bootstrap_node={{bootstrap_node.stdout|lower == ansible_hostname|lower}}
          when: bootstrap_node.rc == 0
        - name: update rgw endpoints
          when:
            - step|int == 5
            - is_bootstrap_node|bool
          block:
            - name: set openstack command
              set_fact:
                oc_openstack_cmd:
                  - openstack
                  - '--os-username admin'
                  - '--os-password'
                  - {get_param: AdminPassword}
                  - '--os-identity-api-version 3'
                  - '--os-project-name admin'
                  - '--os-project-domain-name Default'
                  - '--os-region-name'
                  - {get_param: KeystoneRegion}
                  - '--os-user-domain-name Default'
                  - '--os-auth-type password'
                  - '--os-auth-url'
                  - {get_param: [EndpointMap, KeystoneV3Internal, uri]}
            - name: get endpoint IDs
              command: "{{ oc_openstack_cmd|join(' ') }} endpoint list --service object-store --interface {{ item }} -f json"
              loop:
                - 'internal'
                - 'public'
                - 'admin'
              register: endpoint_ids
            - name: update keystone endpoint
              command: "{{ oc_openstack_cmd|join(' ') }} endpoint set --url {{ item }} {{ (endpoint_ids.results[idx].stdout|from_json)[0]['ID'] }}"
              when:
                - endpoint_ids.results[idx].rc == 0
                - (endpoint_ids.results[idx].stdout|from_json)[0]['URL'] != item
              loop:
                - {get_param: [EndpointMap, CephRgwInternal, uri]}
                - {get_param: [EndpointMap, CephRgwPublic, uri]}
                - {get_param: [EndpointMap, CephRgwAdmin, uri]}
              loop_control:
                index_var: idx
      upgrade_tasks: *endpoint_update_tasks
      service_config_settings:
        keystone:
          ceph::rgw::keystone::auth::public_url: {get_param: [EndpointMap, CephRgwPublic, uri]}
          ceph::rgw::keystone::auth::internal_url: {get_param: [EndpointMap, CephRgwInternal, uri]}
          ceph::rgw::keystone::auth::admin_url: {get_param: [EndpointMap, CephRgwAdmin, uri]}
          ceph::rgw::keystone::auth::region: {get_param: KeystoneRegion}
          ceph::rgw::keystone::auth::roles: [ 'admin', 'Member', 'ResellerAdmin', 'swiftoperator' ]
          ceph::rgw::keystone::auth::tenant: service
          ceph::rgw::keystone::auth::user: swift
          ceph::rgw::keystone::auth::password: {get_param: SwiftPassword}
