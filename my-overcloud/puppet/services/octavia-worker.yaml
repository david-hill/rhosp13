heat_template_version: queens

description: >
  OpenStack Octavia Worker service.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  MonitoringSubscriptionOctaviaWorker:
    default: 'overcloud-octavia-worker'
    type: string
  OctaviaWorkerLoggingSource:
    type: json
    default:
      tag: openstack.octavia.worker
      path: /var/log/octavia/worker.log
  OctaviaFlavorProperties:
    default:
      ram   : '1024'
      disk  : '3'
      vcpus : '1'
    description: Dictionary describing the nova flavor for amphora.
    type: json
  OctaviaManageNovaFlavor:
    default: true
    description: Configure the nova flavor for the amphora.
    type: boolean
  OctaviaClientCertFile:
    default: '/etc/octavia/certs/client.pem'
    description: client certificate for amphoras
    type: string
  OctaviaClientCert:
    default: ''
    description: Client certificate data. If provided, this will create or update
                 a file on the host with the path provided in OctaviaClientCertFile
                 with the certificate data.
    type: string
  OctaviaProjectName:
    description: The project name for the keystone Octavia account.
    type: string
    default: 'service'

conditions:
  octavia_client_cert_unset: {equals: [{get_param: OctaviaClientCert}, ""]}

resources:

  OctaviaBase:
    type: ./octavia-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  OctaviaController:
    type: ./octavia-controller.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Octavia Worker service.
    value:
      service_name: octavia_worker
      monitoring_subscription: {get_param: MonitoringSubscriptionOctaviaWorker}
      config_settings:
        map_merge:
          - get_attr: [OctaviaBase, role_data, config_settings]
          - get_attr: [OctaviaController, role_data, config_settings]
          - octavia::worker::amp_project_name: {get_param: OctaviaProjectName}
            octavia::worker::nova_flavor_config: {get_param: OctaviaFlavorProperties}
            octavia::worker::manage_nova_flavor: {get_param: OctaviaManageNovaFlavor}
            octavia::worker::nova_flavor_config: {get_param: OctaviaFlavorProperties}
            octavia::certificates::client_cert: {get_param: OctaviaClientCertFile}
          -
            if:
            - octavia_client_cert_unset
            - {}
            - octavia::certificates::client_cert_data: {get_param: OctaviaClientCert}

      service_config_settings:
        fluentd:
          tripleo_fluentd_groups_octavia_worker:
            - octavia
          tripleo_fluentd_sources_octavia_worker:
            - {get_param: OctaviaWorkerLoggingSource}
      step_config: |
        include tripleo::profile::base::octavia::worker

